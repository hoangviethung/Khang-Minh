{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/GoogleMapController.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","LocationInfo","map","markers","locationsInput","mapOption","gestureHandling","zoom","initialize","google","maps","Map","document","querySelector","infoWindow","bounds","LatLngBounds","forEach","location","index","locationLatLng","LatLng","lat","lng","marker","Marker","title","position","icon","extend","push","showInfoMarkerOnMap","fitBounds","addMarkers","InfoWindow","listener","event","addListener","getZoom","setZoom","removeListener","setContent","address","phone","open","panTo","getPosition","close","addEventListener","__awaiter","addDomListener","window","console","log","items","querySelectorAll","Number","getAttribute","getElementsByTagName","innerHTML","getElementsByClassName","trigger","getLocationList","item","element","selectName","option"],"mappings":"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","file":"GoogleMapController.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {} from \"googlemaps\";\r\n\r\nlet locationsInput: LocationInfo[] = [];\r\nlet map: any;\r\nlet markers: any;\r\ndeclare var google: any;\r\n\r\nlet mapOption = {\r\n\tgestureHandling: \"cooperative\",\r\n\tzoom: 12,\r\n};\r\n\r\nexport class LocationInfo {\r\n\tlat: number;\r\n\tlng: number;\r\n\ttitle: string;\r\n\taddress: string;\r\n\tphone: string;\r\n}\r\n\r\nconst addMarkers = (infoWindow: any) => {\r\n\tmarkers = [];\r\n\tconst bounds = new google.maps.LatLngBounds();\r\n\tlocationsInput.forEach((location: any, index: any) => {\r\n\t\tlet locationLatLng = new google.maps.LatLng(location.lat, location.lng);\r\n\t\tlet marker = new google.maps.Marker({\r\n\t\t\tmap: map,\r\n\t\t\ttitle: location.title,\r\n\t\t\tposition: locationLatLng,\r\n\t\t\ticon: location.icon,\r\n\t\t});\r\n\t\tbounds.extend(marker.position);\r\n\t\tmarkers.push(marker);\r\n\t\tshowInfoMarkerOnMap(infoWindow, marker, index);\r\n\t});\r\n\r\n\tmap.fitBounds(bounds);\r\n};\r\n\r\nconst showInfoMarkerOnMap = (infoWindow: any, marker: any, index: any) => {\r\n\tgoogle.maps.event.addListener(marker, \"click\", function () {\r\n\t\tinfoWindow.setContent(`\r\n\t\t\t<div class='map-markers'>\r\n\t\t\t\t<h3>${locationsInput[index].title}</h3>\r\n\t\t\t\t<p>${locationsInput[index].address}</p>\r\n\t\t\t\t<p>${locationsInput[index].phone}</p>\r\n\t\t\t</div>\r\n\t\t`);\r\n\t\tinfoWindow.open(map, marker);\r\n\t\tmap.panTo(marker.getPosition());\r\n\t\tmap.setZoom(12);\r\n\t});\r\n\tgoogle.maps.event.addListener(map, \"click\", function () {\r\n\t\tinfoWindow.close();\r\n\t});\r\n};\r\n\r\nconst getLocationList = () => {\r\n\tif (document.querySelector(\".introMap__list ul\")) {\r\n\t\tconsole.log(locationsInput)\r\n\t\t// Get location information in html\r\n\t\tvar items = document.querySelectorAll(\".introMap__list ul li\")\r\n\t\tfor (let index = 0; index < items.length; index++) {\r\n\t\t\tlocationsInput.push({\r\n\t\t\t\tlat: Number(items[index].getAttribute(\"data-lat\")),\r\n\t\t\t\tlng: Number(items[index].getAttribute(\"data-lng\")),\r\n\t\t\t\ttitle: items[index].getElementsByTagName(\"h6\")[0].innerHTML,\r\n\t\t\t\taddress: items[index].getElementsByClassName(\"location\")[0].innerHTML,\r\n\t\t\t\tphone: items[index].getElementsByClassName(\"phone\")[0].innerHTML,\r\n\t\t\t});\r\n\r\n\t\t\titems[index].addEventListener(\"click\", () => {\r\n\t\t\t\tgoogle.maps.event.trigger(markers[index], \"click\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst initialize = () => {\r\n\tmap = new google.maps.Map(document.querySelector(\"#map\"), mapOption);\r\n\taddMarkers(new google.maps.InfoWindow());\r\n\tlet listener = google.maps.event.addListener(map, \"idle\", () => {\r\n\t\tif (map.getZoom() > 12) {\r\n\t\t\tmap.setZoom(12);\r\n\t\t}\r\n\t\tgoogle.maps.event.removeListener(listener);\r\n\t});\r\n\t// google.maps.event.addListener(map, \"bounds_changed\", getLocationList);\r\n};\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n\tif (document.querySelector(\"#map\")) {\r\n\t\tgoogle.maps.event.addDomListener(window, \"load\", initialize);\r\n\r\n\t\tif (document.querySelector(\".introMap__list ul\")) {\r\n\t\t\tgetLocationList();\r\n\t\t\tdocument\r\n\t\t\t\t.querySelectorAll(\".introMap__input select\")\r\n\t\t\t\t.forEach((item, index) => {\r\n\t\t\t\t\titem.addEventListener(\"change\", (element) => {\r\n\t\t\t\t\t\tconst selectName = item.getAttribute(\"name\");\r\n\t\t\t\t\t\tif (selectName === \"country\") {\r\n\t\t\t\t\t\t\tdocument\r\n\t\t\t\t\t\t\t\t.querySelectorAll(\r\n\t\t\t\t\t\t\t\t\t\".introMap__input select[name='city'] option\",\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.forEach((option) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\toption.getAttribute(\"data-country\") ==\r\n\t\t\t\t\t\t\t\t\t\titem.getAttribute(\"value\")\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// else {\r\n\t\t\t\t\t\t\t\t\t// \toption.\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else if (selectName === \"city\") {\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n});\r\n"]}
"use strict";let map,infoWindow,MapDOM=document.querySelector("#map"),BranchListDOM=document.querySelector(".introMap__list ul"),markers=[];locationsInput=locationsInput||[],google=google||{};let mapOption={gestureHandling:"cooperative",zoom:12,styles:[{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#444444"}]},{featureType:"administrative.country",elementType:"geometry.fill",stylers:[{saturation:"-42"},{gamma:"3.11"}]},{featureType:"administrative.locality",elementType:"geometry.fill",stylers:[{visibility:"off"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f2f2f2"}]},{featureType:"landscape.man_made",elementType:"labels.text.stroke",stylers:[{lightness:"-82"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"road.local",elementType:"geometry.fill",stylers:[{lightness:"100"},{visibility:"on"},{hue:"#ff0000"},{saturation:"100"},{weight:"1.83"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"all",stylers:[{color:"#d0304e"},{visibility:"on"}]}]};const addMarkers=()=>{markers=[];const a=new google.maps.LatLngBounds;locationsInput.forEach((b,c)=>{let d=new google.maps.LatLng(b.lat,b.lng),e=new google.maps.Marker({map:map,title:b.title,position:d,icon:b.icon});a.extend(e.position),markers.push(e),showInfoMarkerOnMap(e,c)}),map.fitBounds(a)},showInfoMarkerOnMap=(a,b)=>{google.maps.event.addListener(a,"click",function(){infoWindow.setContent(`
				<h3>${locationsInput[b].title}</h3>
				<p>${locationsInput[b].address}</p>
				<p>${locationsInput[b].phone}</p>
			`),infoWindow.open(map,a),map.panTo(a.getPosition()),map.setZoom(12)}),google.maps.event.addListener(map,"click",function(){infoWindow.close()})},getLocationList=()=>{BranchListDOM&&(BranchListDOM.innerHTML="",markers.forEach((a,b)=>{const c=document.createElement("li");c.classList.add("introMap__item"),c.innerHTML=`
				<h6>${locationsInput[b].title}</h6>
				<div class="item__info">
				<div class="info__icon"><img src="./assets/images/intro/home.png" alt="home"></div>
				<div class="info__text location">
				<p>${locationsInput[b].address}</p>
				</div>
				</div>
				<div class="item__info">
				<div class="info__icon"><img src="./assets/images/intro/phone.png" alt="phone"></div>
				<div class="info__text">
				<p>${locationsInput[b].phone}</p>
				</div>
				</div>
			`,c.setAttribute("marker-id",`${b}`),c.addEventListener("click",()=>{const a=c.getAttribute("marker-id");google.maps.event.trigger(markers[a],"click")}),BranchListDOM.appendChild(c)}))},initialize=()=>{infoWindow=new google.maps.InfoWindow,map=new google.maps.Map(MapDOM,mapOption),addMarkers();let a=google.maps.event.addListener(map,"idle",()=>{12<map.getZoom()&&map.setZoom(12),google.maps.event.removeListener(a)});google.maps.event.addListener(map,"bounds_changed",getLocationList)};MapDOM&&(google.maps.event.addDomListener(window,"load",initialize),BranchListDOM&&getLocationList());